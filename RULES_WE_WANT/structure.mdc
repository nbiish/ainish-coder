---
alwaysApply: true
---
# Structure Rule: Logical Tiered Composition

Organize code using a tiered component structure for clarity, maintainability, and robustness:

1. **Atom**: Small, self-contained components (class, UI element, argument parser)
2. **Molecule**: Functional units composed of atoms (command handler, data pipeline)  
3. **Matter**: High-level features from molecules/atoms (CLI command, service endpoint)

## Technical/Methodology Choices

- Each tier depends only on lower tiers (molecules → atoms)
- Enables robust testing, refactoring, and feature extension
- Documentation goes into PRD.md and KNOWLEDGE_BASE/*

## Implementation Process

**New Features:**

- Build atoms (parser, formatter)
- Compose molecules (command handler)  
- Form matter (complete workflow)

This decomposes complexity into well-defined, reusable components following modern best practices.

## Directory Management

All file/directory management scripts run from the `mgmt-scripts/` directory:

**Example:**

```bash
mgmt-scripts/
⮑ cleanup/cleanup.sh
⮑ rename/rename.sh  
⮑ organize/organize.sh
```
